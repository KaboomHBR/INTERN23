<?xml version="1.0"?>
<robot name="inexp_rapid1">
    
<!-- An Indoor Explorer Capable of Rapid Deploy and Fast Moving with Low Central Gravity-->
<!-- Designed with a shape kinda like a vacuum cleaner robot at home -->

  <material name="blue">
    <color rgba="0 0 0.8 1"/>
  </material>
  <material name="black">
    <color rgba="0 0 0 1"/>
  </material>
  <material name="white">
    <color rgba="1 1 1 1"/>
  </material>
  <material name="baby_blue">
    <color rgba="0.54 0.81 0.94 0.8"/>
  </material>
  <material name="magenta">
    <color rgba="1 0 1 1"/>
  </material>
  
<!-- dummy link -->
  <!-- with dummy link we got warnings & errors in RVIZ -->
  <!-- so have eventually eliminated it, more on the appendix -->
  <!--<link name="dummy">
  </link>-->
  
  
  <!-- root link, on the ground just below the model origin -->
  <link name="base_footprint">
   <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <box size="0.001 0.001 0.001" />
      </geometry>
    </visual>
  </link>

  <joint name="base_link_joint" type="fixed">
    <origin xyz="0.0 0.0 0.049" rpy="0 0 0" />
    <parent link="base_footprint"/>
    <child link="base_link" />
  </joint>
  
  
  <!-- the base link is a 0.25*0.25*0.06 cylinder -->
  <link name="base_link">
    <visual>
      <geometry>
        <cylinder length="0.06" radius="0.25"/>
      </geometry>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <material name="blue"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.06" radius="0.25"/>
      </geometry>
      <origin xyz="0 0 0" rpy="0 0 0"/>
    </collision>
    <inertial>
      <mass value="10"/>
      <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0"/>
    </inertial>
  </link>
  <gazebo reference="base_link">
      <material>Gazebo/Blue</material> 
    </gazebo>
    
<!-- dummy joint dealing with warning The root link_base has an inertia specified in the URDF, but KDL... -->
<!-- as explained above it doesn't work that well so we eliminated it -->
  <!--<joint name="dummy_joint" type="fixed">
    <parent link="dummy"/>
    <child link="base_link"/>
    </joint>-->
  
  <!-- laserstand -->
  <link name="laserstand">
      <visual>
          <geometry>
              <box size="0.2 0.25 0.03"/>
          </geometry>
          <material name="white"/>
      </visual>
      <collision>
          <geometry>
              <box size="0.2 0.25 0.03"/>
          </geometry>
      </collision>
      <inertial>
          <mass value="1"/>
          <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0"/>
      </inertial>
  </link>
  <gazebo reference="laserstand">
      <material>Gazebo/White</material>
  </gazebo>
  
  <joint name="base_to_laserstand" type="fixed">
      <parent link="base_link"/>
      <child link="laserstand"/>
      <origin xyz="0 0 0.045" rpy="0 0 0"/> <!-- (0.06/2) + (0.03/2) -->
  </joint>
  
  
  <!-- Hokuyo Laser: appearance and physical properties -->
  <link name="hokuyo_link">
    <collision>
      <geometry>
          <box size="0.1 0.1 0.1"/>
      </geometry>
    </collision>
    <visual>
      <geometry>
        <mesh filename="package://inexp2_description/meshes/hokuyo.dae"/>
      </geometry>
      <material name="black"/>
    </visual>
    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>
  
  <joint name="hokuyo_joint" type="fixed">
    <parent link="laserstand"/>
    <child link="hokuyo_link"/>
    <!--<axis xyz="0 0 1" />-->
    <origin xyz="0 0 0.05" rpy="0 0 0"/> <!-- (0.1/2) -->
  </joint>
  
  <!-- Hokuyo Laser: for gazebo simulation -->
  <gazebo reference="hokuyo_link">
    <sensor type="ray" name="head_hokuyo_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-3.1415926</min_angle> <!--upgraded to 360 degree, simulating in real-life where the laserstand could spin -->
            <max_angle>3.1415926</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.001</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.001</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
          <topicName>/scan</topicName> <!-- /rrbot/laser/scan -->
        <frameName>hokuyo_link</frameName>
      </plugin>
    </sensor>
  </gazebo>
  
  
  <!-- Camera -->
  <link name="camera_link">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
          <sphere radius="0.02"/>
      </geometry>
    </collision>
    <visual>
      <geometry>
          <sphere radius="0.02"/>
      </geometry>
      <material name="white"/>
    </visual>
    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>
  
  <joint name="camera_joint" type="fixed">
    <parent link="hokuyo_link"/>
    <child link="camera_link"/>
    <origin xyz="0 0 0.04" rpy="0 -0.785 0"/>
  </joint>
  
  <!-- camera: for gazebo simulation -->
  <gazebo reference="camera_link">
    <material>Gazebo/White</material> 
    <sensor type="camera" name="camera1">
      <update_rate>59.2</update_rate>
      <camera name="head">
          <horizontal_fov>1.09</horizontal_fov> <!-- 1.3962634 -->
        <image>
          <width>720</width>
          <height>720</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>rrbot/camera1</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

  <!-- junction between the main body (base link) and right wheel -->
  <link name="right_connect">
    <visual>
      <geometry>
          <box size="0.02 0.02 0.02"/> 
      </geometry>
      <material name="white"/>
    </visual>
    <collision>
      <geometry>
        <box size="0.02 0.02 0.02"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="1"/>
      <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0"/>
    </inertial>
  </link>
  <gazebo reference="right_connect">
      <material>Gazebo/White</material> 
    </gazebo>

  <joint name="base_to_right_connect" type="fixed">
    <parent link="base_link"/>
    <child link="right_connect"/>
    <origin xyz="0 -0.256 0.00"/>
  </joint>
  
  <!-- the right wheel -->
  <link name="right_wheel">
    <visual>
      <origin rpy="1.57075 0 0" xyz="0 0 0"/>
      <geometry>
          <cylinder length="0.03" radius="0.049"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <origin rpy="1.57075 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.03" radius="0.049"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="1"/>
      <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0"/>
    </inertial>
  </link>
  <gazebo reference="right_wheel">
      <mu1 value="200.0"/>
      <mu2 value="100.0"/>
      <kp value="10000000.0" />
      <kd value="1.0" />
      <material>Gazebo/Black</material> 
    </gazebo>

  <joint name="right_wheel_to_connect" type="continuous">
    <axis rpy="0 0 0" xyz="0 1 0"/>
    <parent link="right_connect"/>
    <child link="right_wheel"/>
    <origin rpy="0 0 0" xyz="0 -0.025 0"/>
  </joint>
  <!-- This block connects the wheel joint to an actuator (motor), which informs both simulation and visualization of the robot -->
  <transmission name="right_wheel_to_connect_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <actuator name="right_wheel_to_connect_motor">
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
      <joint name="right_wheel_to_connect">
          <hardwareInterface>VelocityJointInterface</hardwareInterface> <!-- hardware_interface/PositionJointInterface -->
      </joint>
    </transmission>
  
  <!-- junction between the main body (base link) and left wheel -->
  <link name="left_connect">
    <visual>
      <geometry>
          <box size="0.02 0.02 0.02"/> 
      </geometry>
      <material name="white"/>
    </visual>
    <collision>
      <geometry>
        <box size="0.02 0.02 0.02"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="1"/>
      <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0"/>
    </inertial>
  </link>
  <gazebo reference="left_connect">
      <material>Gazebo/White</material> 
    </gazebo>
  
  <joint name="base_to_left_connect" type="fixed">
    <parent link="base_link"/>
    <child link="left_connect"/>
    <origin xyz="0 +0.256 0.00"/>
  </joint>
  
  <!-- the left wheel -->
  <link name="left_wheel">
    <visual>
      <origin rpy="1.57075 0 0" xyz="0 0 0"/>
      <geometry>
          <cylinder length="0.03" radius="0.049"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <origin rpy="1.57075 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.03" radius="0.049"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="1"/>
      <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0"/>
    </inertial>
  </link>
  <gazebo reference="left_wheel">
      <mu1 value="200.0"/>
      <mu2 value="100.0"/>
      <kp value="10000000.0" />
      <kd value="1.0" />
      <material>Gazebo/Black</material> 
    </gazebo>
  
  <joint name="left_wheel_to_connect" type="continuous">
    <axis rpy="0 0 0" xyz="0 1 0"/>
    <parent link="left_connect"/>
    <child link="left_wheel"/>
    <origin rpy="0 0 0" xyz="0 0.025 0"/>
  </joint>
  
  <!-- This block connects the wheel joint to an actuator (motor), which informs both simulation and visualization of the robot -->
  <transmission name="left_wheel_to_connect_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <actuator name="left_wheel_to_connect_motor">
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
      <joint name="left_wheel_to_connect">
        <hardwareInterface>VelocityJointInterface</hardwareInterface>
      </joint>
    </transmission>
  
  <!-- junction between the main body (base link) and front caster -->
  <link name="front_connect">
    <visual>
      <geometry>
          <box size="0.02 0.02 0.02"/> 
      </geometry>
      <material name="white"/>
    </visual>
    <collision>
      <geometry>
        <box size="0.02 0.02 0.02"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="1"/>
      <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0"/>
    </inertial>
  </link>
  <gazebo reference="front_connect">
      <material>Gazebo/White</material> 
    </gazebo>
  
  <joint name="base_to_front_connect" type="fixed">
    <parent link="base_link"/>
    <child link="front_connect"/>
    <origin xyz="+0.256 0.00 -0.02"/>
  </joint>
  
  <!-- front caster -->
  <link name="front_caster">
    <visual>
      <geometry>
          <sphere radius="0.029"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <geometry>
        <sphere radius="0.029"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="1"/>
      <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0"/>
    </inertial>
  </link>
  <gazebo reference="front_caster">
      <material>Gazebo/Black</material> 
    </gazebo>
  
  <joint name="front_caster_to_connect" type="continuous">
    <axis rpy="0 0 0" xyz="0 1 0"/>
    <parent link="front_connect"/>
    <child link="front_caster"/>
    <origin rpy="0 0 0" xyz="0.0195 0 0"/>
  </joint>
  
    <!-- junction between the main body (base link) and back caster -->
  <link name="back_connect">
    <visual>
      <geometry>
          <box size="0.02 0.02 0.02"/> 
      </geometry>
      <material name="white"/>
    </visual>
    <collision>
      <geometry>
        <box size="0.02 0.02 0.02"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="1"/>
      <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0"/>
    </inertial>
  </link>
  <gazebo reference="back_connect">
      <material>Gazebo/White</material> 
    </gazebo>
  
  <joint name="base_to_back_connect" type="fixed">
    <parent link="base_link"/>
    <child link="back_connect"/>
    <origin xyz="-0.256 0.00 -0.02"/>
  </joint>
  
    <!-- back caster -->
  <link name="back_caster">
    <visual>
      <geometry>
          <sphere radius="0.029"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <geometry>
        <sphere radius="0.029"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="1"/>
      <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0"/>
    </inertial>
  </link>
  <gazebo reference="back_caster">
      <material>Gazebo/Black</material> 
    </gazebo>
  
  <joint name="back_caster_to_connect" type="continuous">
    <axis rpy="0 0 0" xyz="0 1 0"/>
    <parent link="back_connect"/>
    <child link="back_caster"/>
    <origin rpy="0 0 0" xyz="-0.0195 0 0"/>
  </joint>
  
  
  <!-- Gazebo plugin for ROS Control -->
  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/</robotNamespace>
      <commandTopic>/r2d2_diff_drive_controller/cmd_vel</commandTopic>
    </plugin>
  </gazebo>

</robot>
